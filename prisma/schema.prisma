// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model CustomFieldDefinition {
  id               String    @id @default(uuid()) // Unique ID for the field definition
  name             String
  type             String    // e.g., "text", "number", "dropdown", "checkbox"
  required         Boolean   @default(false)
  options          String?   // Removed @db.Text
  shopifyProductId String?   // Optional: if this definition applies to a specific product
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model PerformanceTest {
  id                    String                    @id @default(uuid())
  shop                  String
  appId                 String?                   // The app being tested
  appName               String?                   // Name of the app being tested
  testStoreUrl          String                    // URL of the test store
  status                String                    // "running", "completed", "failed"
  baselineScore         Float?                    // Average baseline score
  postInstallScore      Float?                    // Average post-install score
  scoreDelta            Float?                    // Difference between scores
  passStatus            String?                   // "pass", "fail", null if not completed
  createdAt             DateTime                  @default(now())
  updatedAt             DateTime                  @updatedAt
  results               PerformanceTestResult[]
}

model PerformanceTestResult {
  id                    String          @id @default(uuid())
  performanceTestId     String
  testType              String          // "baseline" or "post_install"
  runNumber             Int             // 1, 2, or 3 (for averaging)
  lighthouseScore       Float           // The actual Lighthouse performance score
  lighthouseReport      String?         // JSON string of full Lighthouse report
  testUrl               String          // URL that was tested
  userAgent             String?         // User agent used for testing
  testDuration          Int?            // Time taken for test in milliseconds
  createdAt             DateTime        @default(now())
  
  performanceTest       PerformanceTest @relation(fields: [performanceTestId], references: [id], onDelete: Cascade)
  
  @@index([performanceTestId, testType])
}
